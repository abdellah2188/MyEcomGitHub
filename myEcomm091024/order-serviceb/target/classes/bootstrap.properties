spring.application.name=order-serviceb
#spring.config.import=optional:consul:
spring.config.import=optional:configserver:http://${CONFIG_SERVICE_URL:localhost}:${CONFIG_SERVICE_PORT:8888}

management.endpoints.web.exposure.include=*
server.port=0

spring.cloud.consul.config.enabled=true
spring.cloud.consul.config.name=order-serviceb
spring.cloud.consul.config.watch.enabled=false
spring.cloud.consul.config.format=properties

spring.cloud.consul.host=${CONSUL_HOST:localhost}
spring.cloud.consul.port=${CONSUL_PORT:8500}

logging.level.com.hamch.orderserviceb.services.CustomerRestClientService=debug
logging.level.com.hamch.orderserviceb.services.InventoryRestClientService=debug
feign.client.config.default.loggerLevel=full

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#spring.cloud.loadbalancer.ribbon.enabled=false


#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/microservices-realm
####
#
#
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/microservices-realm/protocol/openid-connect/certs
#logging.level.org.springframework.security=DEBUG
#


#spring.cloud.stream.bindings.notificationEventSupplier-out-0.destination=notification-events
#spring.cloud.stream.source=notificationEventSupplier
#
#spring.sleuth.circuitbreaker.enabled=false
#spring.sleuth.integration.enabled=true
#spring.zipkin.base-url=http://localhost:9411/
#spring.sleuth.sampler.probability=1