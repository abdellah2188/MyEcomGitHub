#version: '3.9'
services:

  docker-mysql:
    image: mysql
    container_name: cn-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
     
    ports:
      - 3307:3306
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:3306/health" ]
        interval: 10s
        retries: 10
    restart: always
    networks:
      - net-micros

  discovery:
    image: hashicorp/consul:latest
    container_name: discovery
    environment:
        - CONUL_BIND_INTERFACE=eth0
    volumes:
        - consul_data:/consul/data
    ports:
       - '8501:8500'
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8500/health" ]
        interval: 10s
        retries: 10
    restart: always
    depends_on:
       - docker-mysql
           #condition: service_started
    networks:
          - net-micros
      
  config-service:
     build: ./config-service
     container_name: config-service
     image: im-config-service
     command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- node consumer.js'
     ports:
        - "8889:8889"
     environment:
        - CONSUL_HOST=discovery
        - CONSUL_PORT=8500
        - CONFIG_PORT=8889
        - RABBITMQ_HOST=rabbitmq
        - RABBITMQ_PW=5672

     healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8889/actuator/health" ]
        interval: 10s
        retries: 10
     depends_on:
         - discovery
        # - rabbitmq
            #condition: service_healthy
     networks:
       - net-micros     
  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: cn-rabbitmq
    environment:
       RABBITMQ_DEFAULT_USER: guest
       RABBITMQ_DEFAULT_PASS: guest
       RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5673:5672
      - 15673:15672
    networks:
      - net-micros
    #command: sh -c '/bin/wait-for-it.sh rabbitmq:5673 --timeout=30 -- node consumer.js'  
   
  inventory-service:
     build: ./inventory-service
     #image: im-inventory-service
     container_name: cn-inventory-service
     command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- node consumer.js'
     environment:
       - JAVA_TOOL_OPTIONS=
       - CONSUL_HOST=discovery
       - CONSUL_PORT=8500
       - CONFIG_SERVICE_URL=config-service
       - CONFIG_SERVICE_PORT=8889
       - DOCKER_MYSQL=docker-mysql
       - MYSQL_PW=root
       - MYSQL_USR=root
       #- SPRING_PROFILES_ACTIVE=docker  
       - SPRING_DATA_SOURCE_URL=jdbc:mysql://docker-mysql:3306/inventory-service?createDatabaseIfNotExist=true
       - RABBITMQ_HOST=rabbitmq
       - RABBITMQ_PW=5672
#     healthcheck:
#       test: [ "CMD", "curl", "-f", "http://localhost:8500/actuator/health" ]
#       interval: 10s
#       retries: 4
     networks:
       - net-micros
       
     depends_on:
        config-service:
            condition: service_healthy
        
             
volumes:
   consul_data:
#  customer-service:
#    #image: im-customer-service
#    build: ./customer-service
#    container_name: cn-customer-service
#    #restart: always
#    environment:
#        - JAVA_TOOL_OPTIONS=
#        - CONSUL_HOST=discovery 
#        - CONSUL_PORT=8500
#        - CONFIG_SERVICE_URL=config-service
#        - CONFIG_SERVICE_PORT=8888
##    healthcheck:
##        test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
##        interval: 10s
##        retries: 4
#    depends_on:
#       config-service:
#          condition: service_started
#  product-serviceb:
#    build: ./product-serviceb
#    #image: im-product-serviceb
#    container_name: cn-product-serviceb
#    environment:
#        - JAVA_TOOL_OPTIONS=
#        - CONSUL_HOST=discovery
#        - CONSUL_PORT=8500
#        - CONFIG_SERVICE_URL=config-service
#        - CONFIG_SERVICE_PORT=8888
##    healthcheck:
##        test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
##        interval: 10s
##        retries: 4
#    depends_on:
#       config-service:
#          condition: service_healthy
#  order-serviceb:
#     build: ./order-serviceb
#     #image: im-order-serviceb
#     container_name: cn-order-serviceb
#     environment:
#        - JAVA_TOOL_OPTIONS=
#        - CONSUL_HOST=discovery
#        - CONSUL_PORT=8500
#        - CONFIG_SERVICE_URL=config-service
##     healthcheck:
##        test: [ "CMD", "curl", "-f", "http://localhost:8500/actuator/health" ]
##        interval: 10s
##        retries: 4
#     depends_on:
#        config-service:
#           condition: service_healthy
#  payment-service:
#     build: ./payment-service
#     #image: im-payment-service
#     container_name: cn-payment-service
#     environment:
#        - JAVA_TOOL_OPTIONS=
#        - CONSUL_HOST=discovery
#        - CONSUL_PORT=8500
#        - CONFIG_SERVICE_URL=config-service
##     healthcheck:
##        test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
##        interval: 10s
##        retries: 4
#     depends_on:
#        config-service:
#           condition: service_healthy
#  notification-service:
#     build: ./notification-service
#     #image: im-notification-service
#     container_name: cn-notification-service
#     environment:
#        - JAVA_TOOL_OPTIONS=
#        - CONSUL_HOST=discovery
#        - CONSUL_PORT=8500
#        - CONFIG_SERVICE_URL=config-service
##     healthcheck:
##         test: [ "CMD", "curl", "-f", "http://localhost:8500/actuator/health" ]
##         interval: 10s
##         retries: 4
#     depends_on:
#        config-service:
#           condition: service_healthy
#  api-gateway-service:
#     build: ./api-gateway-service
#     #image: im-api-gateway-service
#     container_name: cn-api-gateway-service
#     ports:
#       - 8080:8080
#     environment:
#       - JAVA_TOOL_OPTIONS=
#       - CONSUL_HOST=discovery
#       - CONSUL_PORT=8500
#       - CONFIG_SERVICE_URL=config-service
##     healthcheck:
##        test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
##        interval: 10s
##        retries: 4
#     depends_on:
#        config-service:
#           condition: service_healthy
networks:
   net-micros:
      driver: bridge
    